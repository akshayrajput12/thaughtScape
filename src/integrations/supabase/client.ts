
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://oxnbnaznhubhqfjyllms.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im94bmJuYXpuaHViaHFmanlsbG1zIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzU2MzM3NDMsImV4cCI6MjA1MTIwOTc0M30.BxJB2-7bMCHZhgby4HudUTnTrvRwjECWFixDPjnmGwg";

// Initialize Supabase client with improved auth options
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: true
    }
  }
);

// Export a function to check if a user's email is confirmed
export const isEmailConfirmed = async (userId: string) => {
  try {
    const { data, error } = await supabase
      .from('profiles')
      .select('id')
      .eq('id', userId)
      .single();
    
    if (error) {
      console.error("Error checking email confirmation:", error);
      return false;
    }
    
    return !!data;
  } catch (err) {
    console.error("Error in isEmailConfirmed:", err);
    return false;
  }
};

// Check if an email already exists in the database
export const checkEmailExists = async (email: string) => {
  try {
    const { data, error } = await supabase.auth.admin.listUsers();
    if (error) {
      console.error("Error checking email existence:", error);
      return false;
    }
    
    // Check if the email exists in the list of users
    return data.users.some(user => 
      user.email?.toLowerCase() === email.toLowerCase()
    );
  } catch (err) {
    console.error("Error in checkEmailExists:", err);
    return false;
  }
};
